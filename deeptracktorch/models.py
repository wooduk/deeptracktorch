# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_models.ipynb (unless otherwise specified).

__all__ = ['Flatten', 'DeepTrackNet']

# Cell
# export
import torch
from torchvision import transforms

# Cell
from torch import nn

class Flatten(nn.Module):
    def forward(self, x):
        return x.view(x.size()[0], -1)


# Cell
DeepTrackNet=nn.Sequential(
        # 3 layer convolutions
        nn.Conv2d(1,16,3),
        nn.ReLU(),
        nn.MaxPool2d(2),
        nn.Conv2d(16,32,3),
        nn.ReLU(),
        nn.MaxPool2d(2),
        nn.Conv2d(32,64,3),
        nn.ReLU(),
        nn.MaxPool2d(2),

        # an additonal undocumented convolutions 128 filters!
        nn.Conv2d(64,128,3),
        nn.ReLU(),
        nn.MaxPool2d(2),

        # dense top
        Flatten(),
        nn.Linear(128,32),
        nn.ReLU(),
        nn.Linear(32,32),
        nn.ReLU(),
        nn.Linear(32,3)
    )