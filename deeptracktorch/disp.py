# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/98_Display.ipynb (unless otherwise specified).

__all__ = ['show_arr', 'format_bessel_example', 'show_images_dir']

# Cell
import altair as alt
import pandas as pd
import numpy as np

# Cell
# a convience function for displaying array as heatmap
def show_arr(A, value_name='z', w=300, h=300, log_scale=False, cmap='viridis',title='',figsize=(10,10)):

    if (cmap[-2:] == '_r'):
        cmap=cmap[:-2]
        sorting='descending'
    else:
        sorting='ascending'

    source = pd.DataFrame(A).unstack().reset_index()
    source.columns=['x','y',value_name]
    if log_scale:
        source['log_'+value_name]=np.log10(source[value_name])
        z=f'log_{value_name}'

    else:
        z=f'{value_name}'

    domain=[source[z].min(),source[z].max()]

    return alt.Chart(source).mark_rect().encode(
        x='x:O',
        y='y:O',
        fill=alt.Color(f'{z}:Q',scale=alt.Scale(domain=domain,scheme=cmap),sort=sorting),
        stroke=alt.Color(f'{z}:Q',scale=alt.Scale(domain=domain,scheme=cmap),sort=sorting),
        tooltip=[ alt.Tooltip('x:O', title='x'), alt.Tooltip('y:O', title='y'), alt.Tooltip(f'{value_name}:Q', title=value_name) ]
    ).interactive().properties(width=w,height=h,title=title)

# Cell
def format_bessel_example(a):
    # legend, axes labels and markers
    a.axhline(0,c='grey',linestyle='--',lw=1)
    #suffix=['th','st','nd','rd','th']
    #a.legend([f"${o}^{{{suffix[np.clip(o,0,4)]}}}$" for o in bessel_order])
    a.set_xlabel('$r$');
    a.set_ylabel('$f(order,r)$')
    a.minorticks_on(); a.grid(True,which='minor',c='#eeeeee');
    a.grid(True,which='major',c='#aaaaaa')
    a.set_title("Response of `scipy.special.jv()` for values of $order$ and $r$", fontsize=16)
    a.set_ylim([-0.5,1.0]);
    a.set_xlim([0,50]);

# Cell
from glob import glob

def show_images_dir(d):
    for k in ['train','valid','test']:
        g=glob(f"{d/k/'*.png'}")
        L=len([j for j in g])
        print('\n',k,f"({L} files)")
        for i,f in enumerate(g):
            print('    |------',f.split('/')[-1])
            if i>3:
                print('    |------ ...',)
                break